# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Show help
        run: |
          cmd /r dir /?
          cmd /r dir /s /b windows
      - uses: subosito/flutter-action@4389e6cbc6cb8a4b18c628ff96ff90be0e926aa8
        with:
          channel: stable
      - name: Build project for Windows
        run: |
          flutter build windows
          cmd /r dir /s build/windows/runner
      - name: Output
        uses: actions/upload-artifact@v2
        with:
          name: flutter-apk
          path: build/windows/runner/Release
  android-build:
    needs: windows-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@4389e6cbc6cb8a4b18c628ff96ff90be0e926aa8
        with:
          channel: stable
      - name: Build apk
        run: |
          flutter build apk
          find build -name "*.apk"
      - name: Store APK
        uses: actions/upload-artifact@v2
        with:
          name: flutter-apk
          path: build/app/outputs/flutter-apk/app-release.apk
  linux-build:
    runs-on: ubuntu-latest
    needs: windows-build
    steps:
      - name: Install ninja
        run: sudo apt update && sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - uses: actions/checkout@v2

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: subosito/flutter-action@4389e6cbc6cb8a4b18c628ff96ff90be0e926aa8

      - name: Configuration flutter
        run: flutter config --enable-linux-desktop

      - name: Install dependencies
        run: flutter pub get
      - name: Build project for Linux
        run: |
          flutter build linux
          find build/linux/x64/release/bundle -type f
          mkdir -p artifacts
          tar -zcvf artifacts/flutterapp.tar.gz -C build/linux/x64/release/bundle .

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      # - name: Run tests
      #   run: flutter test
      - name: Store packages
        uses: actions/upload-artifact@v2
        with:
          name: flutter-linux
          path: ./artifacts
